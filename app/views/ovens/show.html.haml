%h3= @oven.name

.cookie-info
  Cookie/s in oven:
  - unless @is_empty
    #{@size} cookie/s with #{@fillings}
    - unless @is_baking
      #cookie-status-text
        %h6 Your batch of #{@size} cookies with #{@fillings} is ready to pick up from Oven
    - else
      #cookie-status-text
        %h6 Baking a batch of #{@size} cookie/s... please wait.

    #cookie-status-button
      = button_to "Retrieve #{@size} #{@fillings} Cookie/s", empty_oven_path, class: 'button tiny retrieve-button'
  - else
    None
%br

= link_to "Prepare Cookie", new_oven_cookies_path(@oven), class: 'button'

- if !@is_empty && @is_baking  
  :javascript
    $("#cookie-status-button").hide()
    const TIMEOUT_IN_SECONDS = 1000
    const cookieStatusChecker = {
      interval: '',
      run: function () {
        interval = setInterval(
          this.checkCookieStatus,
          TIMEOUT_IN_SECONDS
        )
      },
      checkCookieStatus: function() {
        fetch('/api/batches/#{@batch_id}/status')
        .then(response => response.json())
        .then(data => {
          if (data.status == "baked") {
            clearInterval(interval)
            $("#cookie-status-text").html('<h6>Your batch of #{@size} cookies with #{@fillings || "no fillings"} is ready to pick up from Oven</h6>');
            $("#cookie-status-button").show()
          }
        })
        .catch((error) => { clearInterval(interval) }
        )
      }
    }
    cookieStatusChecker.run()